replicaCount: 1

image:
  repository: gmarialva/ezops-api
  pullPolicy: IfNotPresent
  tag: "1.0"

imagePullSecrets: {}
  # - name: dockerhub
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

namespace:
  name: ezops

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

livenessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 90
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 90
  periodSeconds: 30

service:
  name: http
  type: ClusterIP
  port: 5000
  containerPort: 3000
  protocol: TCP
  targetPort: http

ingress:
  enabled: false
  className: ""
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: 50.19.72.152
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
  - hosts:
    - 50.19.72.152
    secretName: api-tls

configMap:
  create: true
  name: "api"
  data:
    DB_USER: api
    DB_HOST: postgresql
    DB_PORT: "5432"
    DB_NAME: "ezopsapi"

secret:
  create: true
  name: "api"
  data: 
    DB_PASSWORD: password

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  auth:
    username: api
    password: password
    database: ezopsapi
  primary:
    initdb:
      scripts: 
        init.sql: |-
          create schema IF NOT EXISTS blog;
          create table IF NOT EXISTS blog.post (
            id serial primary key,
            title text not null,
            content text not null,
            date timestamp default now()
          );
