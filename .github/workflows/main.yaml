name: App Build

on:
  push:
    branches:
      - build
  workflow_dispatch:

env:
  DOCKER_ID: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PW: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  APP_NAME: ezops-api
  NAMESPACE: ezops-api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          ref: ${{github.base_ref}}
          
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: '-3'
        format: 'YYMMDDHHmm'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build docker
      env:
        TIME: "${{ steps.time.outputs.time }}"
      run: |
        echo 'Building the Docker image...'
        docker build --no-cache --rm -t $DOCKER_REGISTRY/$APP_NAME:$TIME .
        echo 'Pushing the Docker image...'
        echo 'All done!'
          
    - name: Trivy Scanning
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_REGISTRY }}/${{env.APP_NAME}}:${{ steps.time.outputs.time }}'
        format: 'table'
        output: 'trivy-results.txt'

    - name: Upload report Trivy
      uses: actions/upload-artifact@v2
      with:
        name: Trivy
        path: |
          trivy-results.txt

    - name: Push to docker 
      env:
        TIME: "${{ steps.time.outputs.time }}"
      run: docker push $DOCKER_REGISTRY/$APP_NAME:$TIME

    - name: Render Version in Helm values 
      env:
        TIME: "${{ steps.time.outputs.time }}"
      run: | 
        wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\
        chmod +x /usr/bin/yq
        yq eval ".image.tag = \"$TIME\"" -i ezopsapi/values.yaml
        cat ezopsapi/values.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
      with:
          ref: ${{github.base_ref}}

    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Install Chart
      run: |
        helm dependency update ezopsapi
        helm template ezopsapi --dry-run
        echo $KUBECONFIG | base64 -d > kubeconfig
        export KUBECONFIG="kubeconfig"